- name: manage-dce-spark-jobs
  serial_groups: [infrastructure, config]
  serial: true
  on_failure:
    put: slack-alert
    params:
        channel: '#deployment-status'
        icon_url: https://s3-eu-west-1.amazonaws.com/safpub/vader.jpg
        username: build Vader
        text: |
            ===========================================================
            FAILED: Manage dce pipeline spark jobs for ((deployment_name))
            branch: ((git_branch))
            pipeline: $BUILD_PIPELINE_NAME
            job: $BUILD_JOB_NAME
            url: https://ci-concourse.sd-ngp.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

  plan:
      -
        get: timer-we-all-get-up
        trigger: ((deploy))
      - get: ci-repo
        passed: [run-services]
      -
        get: spark
      -
        get: spark-repo
      -
        put: slack-alert
        params:
            channel: '#deployment-status'
            icon_url: https://s3-eu-west-1.amazonaws.com/safpub/yoda.png
            username: build Yoda
            text: |
                ===========================================================
                Manage spark jobs started for ((deployment_name))
                branch: ((git_branch))
                pipeline: $BUILD_PIPELINE_NAME
                job: $BUILD_JOB_NAME
                url: https://ci-concourse.sd-ngp.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
      -
        task: load-jobs
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: sdldevelopers/awstools
              password: ((docker-password))
              username: ((docker-user-name))
              tag: latest
          inputs:
            -
              name: ci-repo
            -
              name: spark
            -
              name: spark-repo
          params:
            AWS_SECRET_ACCESS_KEY: ((aws_secret_access_key))
            AWS_ACCESS_KEY_ID: ((aws_access_key_id))
            AWS_REGION: eu-west-1
            PLATFORM: ((platform))
            PRIVATE_KEY: ((bitbucket-private-key))
            STACK_NAME: ((stack_name))
          run:
            path: sh
            args:
              - -exc
              - |
                export TOP=$(pwd)
                # Import common functions
                . ci-repo/tasks/common/common.sh

                prepare_git

                # Template out spark script
                /populate -param $TOP/spark/manifest.ini -template $TOP/spark-repo/emr-load-jobs.sh.tmpl -out $TOP/spark-repo/emr-load-jobs.sh
                cd $TOP/spark-repo/
                sh ./emr-load-jobs.sh
      -
        put: slack-alert
        params:
            channel: '#deployment-status'
            icon_url: https://s3-eu-west-1.amazonaws.com/safpub/yoda.png
            username: build Yoda
            text: |
                ===========================================================
                Manage spark jobs started for ((deployment_name))
                branch: ((git_branch))
                pipeline: $BUILD_PIPELINE_NAME
                job: $BUILD_JOB_NAME
                url: https://ci-concourse.sd-ngp.net/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME
